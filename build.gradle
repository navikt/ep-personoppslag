
buildscript {
    ext {
        springBootVersion = '5.3.13'
        springWebVersion = '2.6.1'
        kotlinVersion = '1.6.0'
        jacksonModuleKotlinVersion = '2.13.0'
        prometheusVersion = '1.8.0'
        eessiMetricsVersion = '0.4.2'
        eessiEpLoggingVersion = '1.0.12'
        eessiEpSecVersion = '0.0.14'
        junitVersion = '5.8.2'
        mockkVersion = '1.12.1'
    }

    repositories {
        mavenCentral()
    }
}

plugins {
    id("java-library")
    id("maven-publish")
    id("org.jetbrains.kotlin.jvm") version "1.5.31"
    id("net.researchgate.release") version "2.8.1"
    id("org.sonarqube") version "2.8"
    id("jacoco")
    id("org.jetbrains.kotlin.plugin.spring") version "1.5.31"
    id("com.adarshr.test-logger") version "2.0.0"
    id("com.github.ben-manes.versions") version "0.28.0"
    id("se.patrikerdes.use-latest-versions") version "0.2.13"
    id("org.owasp.dependencycheck") version "6.5.0.1"
    id("com.vanniktech.dependency.graph.generator") version "0.5.0"
}

group = "no.nav.eessi.pensjon"

java {
    withJavadocJar()
    withSourcesJar()
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "11"
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "11"
    }
}

dependencies {
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))
    implementation("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
    implementation("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")


    // Logging
    implementation('net.logstash.logback:logstash-logback-encoder:7.0.1') {
        exclude module: "commons-logging"
    }

    implementation("io.micrometer:micrometer-registry-prometheus:$prometheusVersion")

    //eessi-pensjon
    implementation("no.nav.eessi.pensjon:ep-security-sts:$eessiEpSecVersion")
    implementation("no.nav.eessi.pensjon:ep-metrics:$eessiMetricsVersion")
    implementation("no.nav.eessi.pensjon:ep-logging:$eessiEpLoggingVersion")

    // Spring
    implementation("org.springframework.boot:spring-boot-starter-web:$springWebVersion") {
        exclude module : "tomcat-embed-core"
    }
    implementation("org.springframework:spring-web:$springBootVersion")
    implementation('org.springframework.retry:spring-retry:1.3.1')

    //Jackson json
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonModuleKotlinVersion")

    implementation("javax.servlet:javax.servlet-api:4.0.1")

    testImplementation("org.junit.jupiter:junit-jupiter:$junitVersion")
    testImplementation("org.springframework:spring-test:$springBootVersion")
    testImplementation("io.mockk:mockk:$mockkVersion")


    configurations { all*.exclude group: 'commons-logging', module: 'commons-logging' }
}

test {
    useJUnitPlatform()
}

// https://github.com/researchgate/gradle-release
release {
    newVersionCommitMessage = "[Release Plugin] - next version commit: "
    tagTemplate = "release-\${version}"
}

// https://help.github.com/en/actions/language-and-framework-guides/publishing-java-packages-with-gradle#publishing-packages-to-github-packages
publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = layout.buildDirectory.dir("https://maven.pkg.github.com/navikt/${rootProject.name}")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

repositories {
    mavenCentral()

    ["ep-metrics", "ep-logging", "ep-security-sts"].each { repo ->
        String token = System.getenv("GITHUB_TOKEN") ?: project.findProperty("gpr.key")
        if (!token) throw new NullPointerException("Missing token, you have to set GITHUB_TOKEN or gpr.key, see README")
        maven {
            url = uri("https://maven.pkg.github.com/navikt/$repo")
            credentials {
                username = "token"
                password = token
            }
        }
    }
}

// https://docs.gradle.org/current/userguide/jacoco_plugin.html
jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

tasks.sonarqube.dependsOn tasks["jacocoTestReport"]

/* https://github.com/ben-manes/gradle-versions-plugin */
dependencyUpdates {
    rejectVersionIf {
        ['alpha', 'beta', 'b', 'rc', 'cr', 'm', 'preview', 'pr']
                .any { qualifier -> it.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/}
    }
    revision = 'release'
}